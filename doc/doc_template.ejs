<!doctype html>
<html>
<head>
    <title><%= namespace %> -- AgentK Documentation Generator</title>
    <link rel="stylesheet" href="doc.css"/>
</head>
<body class="frames">
<ul>
    <% modules.forEach(function(module) {
    %><li><% if(module.namespace === namespace) { %><%- module.namespace %><%
        } else { %><a href="<%- module.namespace %>.html"<% if(module.meta && module.meta.title) { %> title="<%- module.meta.title.trim() %>"<% } %>><%- module.namespace %></a><% } %></li>
    <% }) %>
</ul>
<div class="content">
<h1><%= namespace %></h1>
<% if(meta && meta.title) { %>
<p><%= meta.title %></p>
<% } %>

<% if (meta) { %>
<div class="meta-description">
    <%- parseMarkup(meta.description) %>
</div>

<% if(meta.example) { %>
<h4>Example</h4>
<pre><%= meta.example.replace(/^    |^\r?\n/gm, '') %></pre>
<% }%>


<% } %>

<ul>
    <% consts.forEach(function(obj) {%><li>constant <a href="#<%- obj.name %>"><%- obj.name %></a><% if(obj.comment.type) { %>:<code><%- parseTypename(obj.comment.type) %></code><% } %></li><%})%>
    <% variables.forEach(function(obj) {%><li>variable <a href="#<%- obj.name %>"><%- obj.name %></a><% if(obj.comment.type) { %>:<code><%- parseTypename(obj.comment.type) %></code><% } %></li><%})%>
    <% methods.forEach(function(method) {%><li><a href="#<%- method.title %>"><%- method.prototype %></a><%
        if (method.comment.hasOwnProperty('constructor')) { %> <b>constructor</b><%
        } else if(method.static) { %><b>static</b><%} %></li><%})%>
    <% if(_default) {%><li>module default: <a href="#<%- _default.name %>"><%- _default.type %> <%- _default.name %></a></li><% } %>
</ul>

<dl id="definitions">
<%
consts.forEach(function(obj) {var comment = obj.comment; %>
    <dt id="<%- obj.name %>">
    <div><%- obj.name %></div>
    <sub>constant</sub>
    </dt>
    <dd>
        <p class="proto"><%- obj.name %><% if(comment.type) { %>:<code><%- parseTypename(comment.type) %></code><% }
            if(obj.value) { %> = <code><%- obj.value %></code>
            <% } %>

        <% if(comment.description) {%><p class="desc">
            <%- parseMarkup(comment.description)%>
        </p><% } %>

        <% if(comment.example) { %>
        <h4>Example</h4>
        <pre><%= comment.example.replace(/^    |^\r?\n/gm, '') %></pre>
        <% }%>
    </dd>
<% });
variables.forEach(function(obj) {var comment = obj.comment; %>
    <dt id="<%- obj.name %>">
        <div><%- obj.name %></div>
        <sub>variable</sub>
    </dt>
    <dd>
        <p class="proto"><%- obj.name %><% if(comment.type) { %>:<code><%- parseTypename(comment.type) %></code><% }
    if(obj.value) { %> = <code><%- obj.value %></code>
    <% } %>

        <% if(comment.description) {%><p class="desc">
            <%- parseMarkup(comment.description)%>
        </p><% } %>

        <% if(comment.example) { %>
        <h4>Example</h4>
        <pre><%= comment.example.replace(/^    |^\r?\n/gm, '') %></pre>
        <% }%>
    </dd>
<% });
methods.forEach(function (method) {var comment = method.comment; %>
    <dt id="<%- method.title %>">
        <div><%- method.name %>()</div><sub><%- comment.hasOwnProperty('constructor') ? 'class'
                    : comment.hasOwnProperty('getter') ? 'getter'
                    : comment.hasOwnProperty('setter') ? 'setter'
                    : method.static ? 'static method' : 'method' %></sub>
    </dt>
    <dd>
        <p class="proto"><%- method.prototype %>
        <% if(comment.description) {%><p class="desc">
            <%- parseMarkup(comment.description)%>
        </p><% } %>

        <% if(comment.extends) { %>
        <h4>Parent Class</h4>
        <p><%- parseTypename(comment.extends.trim()) %></p>
        <% }%>

        <% if(comment.example) { %>
        <h4>Example</h4>
        <pre><%= comment.example.replace(/^    |^\r?\n/gm, '') %></pre>
        <% }%>

        <% if(comment.param) {%>
        <h4>Parameters</h4>
        <dl>
            <% comment.param.forEach(function(param){var m = /^(?:\{(.+)\}\s*)?(\[\w+\]|\w+)\s*([\s\S]*)/.exec(param);
            if(!m) {
                console.warn(method.name + ': bad param format: ', param);
                return;
            } %>
            <dt><%- m[2][0] === '[' ? '<sub>optional</sub>' + m[2].substr(1, m[2].length - 2)  : m[2] %><% if(m[1]) {%> <code><%- parseTypename(m[1])%></code><%}%></dt>
            <%if(m[3]) {%>
            <dd><%- parseMarkup(m[3])%></dd><%}
            })%>
        </dl>
        <% } %>
        <% if(comment.returns) { var m = /^(?:\{(.+)\}\s*)?(.*)/.exec(comment.returns)%>
        <h4>Returns</h4>
        <p style="margin-left: 1em"><% if(m[1]) {%><code><%- parseTypename(m[1])%></code><%}%><%- m[2]%></p>
        <%}%>
    </dd>
<%})%>
</dl>

</div>
</body>
</html>